{
  "version": "2.0.0",
  "inputs": [],
  "tasks": [
    {
      "label": "Utils: Install Node Modules (Docker)",
      "type": "shell",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-u",
        "1000:1000",
        "-v",
        "${workspaceFolder}:/app",
        "-w",
        "/app",
        "node:24.3.0-alpine",
        "sh",
        "-c",
        "chmod +x scripts/bootstrap.sh && ./scripts/bootstrap.sh"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "detail": "Install all node_modules for root, client, and server using Docker (for VS Code intellisense and Problems tab)"
    },
    // =============================================================================
    // DEVELOPMENT TASKS
    // =============================================================================
    {
      "label": "Dev: Start Full Stack",
      "type": "shell",
      "command": "docker",
      "args": [
        "compose",
        "--profile",
        "dev",
        "up",
        "mongodb",
        "client-dev",
        "server-dev"
      ],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "isBackground": true,
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": false
      },
      "problemMatcher": [],
      "detail": "Start MongoDB + Client (5173) + Server (3001) for local development"
    },
    {
      "label": "Dev: Stop All",
      "type": "shell",
      "command": "docker",
      "args": [
        "compose",
        "--profile",
        "dev",
        "down"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "detail": "Stop all development containers"
    },
    // =============================================================================
    // TESTING TASKS
    // =============================================================================
    {
      "label": "Test: Run All Tests",
      "type": "shell",
      "command": "docker",
      "args": [
        "compose",
        "--profile",
        "test",
        "up",
        "--abort-on-container-exit",
        "--build"
      ],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "detail": "Run all client and server tests in Docker test containers (clean, reproducible) with correct user permissions to avoid EACCES errors."
    },
    // =============================================================================
    // STAGING DEPLOYMENT (Private Network - test.ts.chis.dev)
    // =============================================================================
    {
      "label": "Staging: Deploy",
      "type": "shell",
      "command": "docker",
      "args": [
        "compose",
        "--profile",
        "staging",
        "up",
        "-d",
        "--build",
        "mongodb",
        "app-staging"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "dedicated"
      },
      "detail": "Deploy to staging (test.ts.chis.dev) on private network"
    },
    {
      "label": "Staging: Stop",
      "type": "shell",
      "command": "docker",
      "args": [
        "compose",
        "--profile",
        "staging",
        "down"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "detail": "Stop staging deployment"
    },
    // =============================================================================
    // PRODUCTION DEPLOYMENT (Public Network - catan.chis.dev)
    // =============================================================================
    {
      "label": "Prod: Deploy",
      "type": "shell",
      "command": "docker",
      "args": [
        "compose",
        "--profile",
        "prod",
        "up",
        "-d",
        "--build",
        "mongodb",
        "app-prod"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "dedicated"
      },
      "detail": "Deploy to production (catan.chis.dev) on public network"
    },
    {
      "label": "Prod: Stop",
      "type": "shell",
      "command": "docker",
      "args": [
        "compose",
        "--profile",
        "prod",
        "down"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "detail": "Stop production deployment"
    },
    // =============================================================================
    // UTILITY TASKS
    // =============================================================================
    {
      "label": "Utils: View Containers",
      "type": "shell",
      "command": "docker",
      "args": [
        "ps",
        "-a"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "detail": "Show all Docker containers"
    },
    {
      "label": "Utils: Clean All",
      "type": "shell",
      "command": "docker",
      "args": [
        "compose",
        "down",
        "--remove-orphans"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "detail": "Stop and remove all containers"
    },
    // ...existing code...
  ]
}