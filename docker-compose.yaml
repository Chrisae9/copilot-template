# =============================================================================
# Simplified Docker Compose for Catan Game
# =============================================================================

networks:
  public:
    external: true
  private:
    external: true
  catan-network:
    driver: bridge

services:
  # =============================================================================
  # DEVELOPMENT ENVIRONMENT (Local)
  # =============================================================================
  
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: catan-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: catan-game
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - catan-network
    profiles:
      - dev
      - test
      - staging
      - prod

  # Client Development Server (React/Vite)
  client-dev:
    image: node:24.3.0-alpine
    user: "1000:1000"
    container_name: catan-client-dev
    environment:
      - NODE_ENV=development
      - VITE_SOCKET_SERVER_URL=http://localhost:3001
    ports:
      - "5173:5173"
    volumes:
      - ./client:/app
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    networks:
      - catan-network
    profiles:
      - dev

  # Server Development (Express/Socket.IO)
  server-dev:
    image: node:24.3.0-alpine
    user: "1000:1000"
    container_name: catan-server-dev
    environment:
      - NODE_ENV=development
      - PORT=3001
      - MONGODB_URI=mongodb://mongodb:27017/catan-game
      - CLIENT_URL=http://localhost:5173
      - JWT_SECRET=dev-secret-key-change-in-production
    ports:
      - "3001:3001"
    volumes:
      - ./server:/app
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    networks:
      - catan-network
    depends_on:
      - mongodb
    profiles:
      - dev

  # =============================================================================
  # TESTING ENVIRONMENT
  # =============================================================================

  # Client Tests
  client-test:
    image: node:24.3.0-alpine
    user: "1000:1000"
    container_name: catan-client-test
    environment:
      - NODE_ENV=test
      - DOCKER=1
    volumes:
      - ./client:/app
    working_dir: /app
    command: sh -c "npm install && npm run test -- --run"
    # deploy:
    #   resources:
    #     limits:
    #       memory: 2g
    profiles:
      - test

  # Server Tests
  server-test:
    image: node:24.3.0-alpine
    user: "1000:1000"
    container_name: catan-server-test
    environment:
      - NODE_ENV=test
      - MONGODB_URI=mongodb://mongodb:27017/catan-game-test
      - DOCKER=1
    volumes:
      - ./server:/app
    working_dir: /app
    command: sh -c "npm install && npx vitest --run --reporter=verbose --include src/__tests__/socket.test.ts src/__tests__/**/*.test.ts src/__tests__/socket/**/*.test.ts"
    deploy:
      resources:
        limits:
          memory: 2g
    networks:
      - catan-network
    depends_on:
      - mongodb
    profiles:
      - test

  # =============================================================================
  # STAGING ENVIRONMENT (Private Network - *.ts.chis.dev)
  # =============================================================================

  app-staging:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: catan-game-staging
    restart: unless-stopped
    environment:
      - NODE_ENV=staging
      - PORT=3001
      - MONGODB_URI=mongodb://mongodb:27017/catan-game-staging
      - CLIENT_URL=https://test.ts.chis.dev
      - JWT_SECRET=${JWT_SECRET_STAGING:-staging-secret-change-me}
    networks:
      - private
      - catan-network
  # ports removed, only accessible via Traefik
    depends_on:
      - mongodb
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.catan-staging.rule=Host(`test.ts.chis.dev`)"
      - "traefik.http.routers.catan-staging.entrypoints=websecure"
      - "traefik.http.routers.catan-staging.tls.certresolver=cloudflare"
      - "traefik.http.services.catan-staging.loadbalancer.server.port=3001"
      - "traefik.docker.network=private"
    profiles:
      - staging

  # =============================================================================
  # PRODUCTION ENVIRONMENT (Public Network - catan.chis.dev)
  # =============================================================================

  app-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: catan-game-prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGODB_URI=${MONGODB_URI_PROD:-mongodb://mongodb:27017/catan-game}
      - CLIENT_URL=https://catan.chis.dev
      - JWT_SECRET=${JWT_SECRET_PROD}
    networks:
      - public
      - catan-network
    depends_on:
      - mongodb
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.catan-prod.rule=Host(`catan.chis.dev`)"
      - "traefik.http.routers.catan-prod.entrypoints=websecure"
      - "traefik.http.routers.catan-prod.tls.certresolver=cloudflare"
      - "traefik.http.services.catan-prod.loadbalancer.server.port=3001"
      - "traefik.docker.network=public"
    profiles:
      - prod

volumes:
  mongodb_data: